name: CI
on:
  pull_request:
    types:
      - 'labeled'
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    if: "${{ github.event.label.name == 'PR status: code ready' }}"
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache node_modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.4
      - name: Install dependencies
        run: bun install -y
      - name: Install Nx CLI
        run: bun add --global @nrwl/cli@latest
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Setup Canvas
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
        run: npm rebuild canvas
      - uses: nrwl/nx-set-shas@v4
      - run: git branch --track main origin/main
      - name: Run lint on affected projects
        run: bunx nx affected -t lint --parallel=5 --output-style=stream-without-prefixes

  test:
    runs-on: ubuntu-latest
    if: "${{ github.event.label.name == 'PR status: code ready' }}"
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache node_modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.4
      - name: Install dependencies
        run: bun install -y
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Install Nx CLI
        run: bun add --global @nrwl/cli@latest
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Setup Canvas
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
        run: npm rebuild canvas
      - uses: nrwl/nx-set-shas@v4
      - run: git branch --track main origin/main
      - name: Run test on affected projects
        run: bunx nx affected -t test --parallel=5 --output-style=stream-without-prefixes

  build:
    runs-on: ubuntu-latest
    if: "${{ github.event.label.name == 'PR status: code ready' }}"
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache node_modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.4
      - name: Install dependencies
        run: bun install -y
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Install Nx CLI
        run: bun add --global @nrwl/cli@latest
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Setup Canvas
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
        run: npm rebuild canvas
      - uses: nrwl/nx-set-shas@v4
      - run: git branch --track main origin/main
      - name: Run build on affected projects
        run: bunx nx affected -t build --parallel=5 --output-style=stream-without-prefixes

  preview:
    runs-on: ubuntu-latest
    if: "${{ github.event.label.name == 'PR status: code ready' }}"
    timeout-minutes: 60
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache node_modules
        id: cache-nodemodules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.4
      - name: Install dependencies
        run: bun install -y
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Install Nx CLI
        run: bun add --global @nrwl/cli@latest
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Install Cypress
        run: bunx cypress install
      - name: Setup Canvas
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
        run: npm rebuild canvas
      - uses: nrwl/nx-set-shas@v4
      - name: Export NX BASE AND HEAD
        run: |
          export NX_BASE=${{ env.NX_BASE }}
          export NX_HEAD=${{ env.NX_HEAD }}
          export VERCEL_TOKEN=${{ env.VERCEL_TOKEN }}
          export GITHUB_TOKEN=${{ env.GITHUB_TOKEN }}
          bash ./tools/scripts/export-action-env.sh
      - name: Generate Preview Links
        run: bunx nx preview-action scripts
