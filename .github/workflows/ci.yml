name: CI
on:
  pull_request:
    types: [labeled, synchronize, edited]
    branches:
      - main
    paths-ignore:
      - '.nxignore'

permissions:
  id-token: write
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    if: "${{ contains(github.event.pull_request.labels.*.name, 'PR status: code ready') }}"
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.4
      - name: Install dependencies
        run: yarn install
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Setup Canvas
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
        run: npm rebuild canvas
      - uses: nrwl/nx-set-shas@v4
      - run: git branch --track main origin/main
      - name: Run lint on affected projects
        run: yarn nx affected -t lint --parallel=5 --output-style=stream-without-prefixes

  test:
    runs-on: ubuntu-latest
    if: "${{ contains(github.event.pull_request.labels.*.name, 'PR status: code ready') }}"
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.4
      - name: Install dependencies
        run: yarn install
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Setup Canvas
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
        run: npm rebuild canvas
      - uses: nrwl/nx-set-shas@v4
      - run: git branch --track main origin/main
      - name: Run test on affected projects
        run: yarn nx affected -t test --parallel=5 --output-style=stream-without-prefixes

  build:
    runs-on: ubuntu-latest
    if: "${{ contains(github.event.pull_request.labels.*.name, 'PR status: code ready') }}"
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.4
      - name: Install dependencies
        run: yarn install
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Setup Canvas
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
        run: npm rebuild canvas
      - uses: nrwl/nx-set-shas@v4
      - run: git branch --track main origin/main
      - name: Run build on affected projects
        run: yarn nx affected -t build --parallel=5 --output-style=stream-without-prefixes

  preview-and-E2E:
    runs-on: ubuntu-latest
    if: "${{ contains(github.event.pull_request.labels.*.name, 'PR status: code ready') }}"
    timeout-minutes: 20
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
      ACTION_TYPE: PULL_REQUEST_ACTION

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '18.19.1'
      - name: Install dependencies
        run: yarn install
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
      - name: Setup Canvas
        if: "${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}"
        run: npm rebuild canvas
      - name: Install Cypress
        run: yarn add cypress install
      - name: Install Vercel CLI
        run: yarn global add vercel
      - uses: nrwl/nx-set-shas@v4
      - name: Export NX BASE AND HEAD
        run: |
          export NX_BASE=${{ env.NX_BASE }}
          export NX_HEAD=${{ env.NX_HEAD }}
          export VERCEL_TOKEN=${{ env.VERCEL_TOKEN }}
          export GITHUB_TOKEN=${{ env.GITHUB_TOKEN }}
          bash ./tools/scripts/export-action-env.sh
      - name: Generate Preview Links
        run: yarn nx preview-action scripts
