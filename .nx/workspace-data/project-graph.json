{
  "nodes": {
    "concert-ticket-frontend": {
      "name": "concert-ticket-frontend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/concert-ticket/frontend",
        "name": "concert-ticket-frontend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/concert-ticket/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/concert-ticket/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/concert-ticket/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "concert-ticket-frontend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "concert-ticket-frontend:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "concert-ticket-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "concert-ticket-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/concert-ticket/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "concert-ticket-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "concert-ticket-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "concert-ticket-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/concert-ticket/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/concert-ticket/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress concert-ticket-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress concert-ticket-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L1FG/concert-ticket/frontend/cypress/results",
                "rm -rf apps/L1FG/concert-ticket/frontend/.nyc_output",
                "rm -rf apps/L1FG/concert-ticket/frontend/.cy",
                "rm -rf apps/L1FG/concert-ticket/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L1FG/concert-ticket/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "concert-ticket-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L1FG/concert-ticket/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_keYPlSQhhlBht0JF51JZ7qzNWWta -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/concert-ticket/frontend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_keYPlSQhhlBht0JF51JZ7qzNWWta -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_keYPlSQhhlBht0JF51JZ7qzNWWta -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_keYPlSQhhlBht0JF51JZ7qzNWWta -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/concert-ticket/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/concert-ticket/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/concert-ticket/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/concert-ticket/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_Pqi7EaA8l4YezQFC7Qx36yub7Roe -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_Pqi7EaA8l4YezQFC7Qx36yub7Roe -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "concert-ticket-backend": {
      "name": "concert-ticket-backend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/concert-ticket/backend",
        "name": "concert-ticket-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/concert-ticket/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/concert-ticket/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/concert-ticket/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "concert-ticket-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "concert-ticket-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "concert-ticket-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/concert-ticket/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "concert-ticket-backend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "concert-ticket-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "concert-ticket-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/concert-ticket/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "concert-ticket-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/concert-ticket/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/concert-ticket/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/concert-ticket/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_e80WzsB9bdIbsavL6kdOjo1sHxJ0 -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/concert-ticket/backend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_e80WzsB9bdIbsavL6kdOjo1sHxJ0 -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_e80WzsB9bdIbsavL6kdOjo1sHxJ0 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_e80WzsB9bdIbsavL6kdOjo1sHxJ0 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_GZP6JMW31lUjnTVMQ3TYvaMcRcD7 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_GZP6JMW31lUjnTVMQ3TYvaMcRcD7 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "hotel-booking-frontend": {
      "name": "hotel-booking-frontend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/hotel-booking/frontend",
        "name": "hotel-booking-frontend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/hotel-booking/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/hotel-booking/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/hotel-booking/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "hotel-booking-frontend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "hotel-booking-frontend:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "hotel-booking-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "hotel-booking-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/hotel-booking/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "hotel-booking-frontend-1fg"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "hotel-booking-frontend-1fg"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "hotel-booking-frontend-1fg"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/hotel-booking/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/hotel-booking/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress hotel-booking-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress hotel-booking-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L1FG/hotel-booking/frontend/cypress/results",
                "rm -rf apps/L1FG/hotel-booking/frontend/.nyc_output",
                "rm -rf apps/L1FG/hotel-booking/frontend/.cy",
                "rm -rf apps/L1FG/hotel-booking/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L1FG/hotel-booking/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "hotel-booking-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L1FG/hotel-booking/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_Q8sEqSsmmFD5CS1H9alh5Jvw2dLH -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/hotel-booking/frontend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_Q8sEqSsmmFD5CS1H9alh5Jvw2dLH -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_Q8sEqSsmmFD5CS1H9alh5Jvw2dLH -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_Q8sEqSsmmFD5CS1H9alh5Jvw2dLH -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/hotel-booking/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/hotel-booking/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/hotel-booking/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/hotel-booking/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_aTpQk4c1FVGQlIuHCHhd8EItDCp6 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_aTpQk4c1FVGQlIuHCHhd8EItDCp6 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "hotel-booking-backend": {
      "name": "hotel-booking-backend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/hotel-booking/backend",
        "name": "hotel-booking-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/hotel-booking/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/hotel-booking/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/hotel-booking/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "hotel-booking-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "hotel-booking-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "hotel-booking-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/hotel-booking/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "hotel-booking-backend-1fg"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "hotel-booking-backend-1fg"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "hotel-booking-backend-1fg"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/hotel-booking/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "hotel-booking-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/hotel-booking/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/hotel-booking/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/hotel-booking/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_KxYCl7fJrL97PRCVr14Hm4GsIqbT -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/hotel-booking/backend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_KxYCl7fJrL97PRCVr14Hm4GsIqbT -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_KxYCl7fJrL97PRCVr14Hm4GsIqbT -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_KxYCl7fJrL97PRCVr14Hm4GsIqbT -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_6YpNLAPYn5A1a8AI0rOTKtHIktjY -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_6YpNLAPYn5A1a8AI0rOTKtHIktjY -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "real-state-frontend": {
      "name": "real-state-frontend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/real-state/frontend",
        "name": "real-state-frontend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/real-state/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/real-state/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/real-state/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "real-state-frontend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "real-state-frontend:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "real-state-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "real-state-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/real-state/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "real-state-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "real-state-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "real-state-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/real-state/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/real-state/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress real-state-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress real-state-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L1FG/real-state/frontend/cypress/results",
                "rm -rf apps/L1FG/real-state/frontend/.nyc_output",
                "rm -rf apps/L1FG/real-state/frontend/.cy",
                "rm -rf apps/L1FG/real-state/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L1FG/real-state/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "real-state-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L1FG/real-state/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_vu3tSugmxr1DpdzOIOOAwTK0WXLF -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/real-state/frontend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_vu3tSugmxr1DpdzOIOOAwTK0WXLF -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_vu3tSugmxr1DpdzOIOOAwTK0WXLF -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_vu3tSugmxr1DpdzOIOOAwTK0WXLF -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/real-state/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/real-state/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/real-state/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/real-state/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_YZjmVXaX5hLGEItpAj5iRMgAYNE2 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_YZjmVXaX5hLGEItpAj5iRMgAYNE2 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "restaurant-frontend": {
      "name": "restaurant-frontend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/restaurant/frontend",
        "name": "restaurant-frontend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/restaurant/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/restaurant/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/restaurant/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "restaurant-frontend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "restaurant-frontend:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "restaurant-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "restaurant-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/restaurant/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "restaurant-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "restaurant-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "restaurant-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/restaurant/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/restaurant/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress restaurant-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress restaurant-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L1FG/restaurant/frontend/cypress/results",
                "rm -rf apps/L1FG/restaurant/frontend/.nyc_output",
                "rm -rf apps/L1FG/restaurant/frontend/.cy",
                "rm -rf apps/L1FG/restaurant/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L1FG/restaurant/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "restaurant-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L1FG/restaurant/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_TloNy0wREUYY0suAbzydfUS6606E -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/restaurant/frontend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_TloNy0wREUYY0suAbzydfUS6606E -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_TloNy0wREUYY0suAbzydfUS6606E -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_TloNy0wREUYY0suAbzydfUS6606E -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/restaurant/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/restaurant/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/restaurant/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/restaurant/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_xIjHUEOFFUVn9PdU8fG3rnElDDSd -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_xIjHUEOFFUVn9PdU8fG3rnElDDSd -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "instagram-frontend": {
      "name": "instagram-frontend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/instagram/frontend",
        "name": "instagram-frontend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/instagram/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/instagram/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/instagram/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "instagram-frontend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "instagram-frontend:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "instagram-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "instagram-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/instagram/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "Instagram-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "Instagram-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "Instagram-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/instagram/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/instagram/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress instagram-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress instagram-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L1FG/instagram/frontend/cypress/results",
                "rm -rf apps/L1FG/instagram/frontend/.nyc_output",
                "rm -rf apps/L1FG/instagram/frontend/.cy",
                "rm -rf apps/L1FG/instagram/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L1FG/instagram/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "instagram-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L1FG/instagram/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_81wOM3PpyrS5sNW4KUbgWO16NFXJ -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/instagram/frontend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_81wOM3PpyrS5sNW4KUbgWO16NFXJ -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_81wOM3PpyrS5sNW4KUbgWO16NFXJ -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_81wOM3PpyrS5sNW4KUbgWO16NFXJ -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/instagram/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/instagram/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/instagram/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/instagram/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_uiRVCzjGhkSLLe72Og0yrLy4EKn7 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_uiRVCzjGhkSLLe72Og0yrLy4EKn7 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "real-state-backend": {
      "name": "real-state-backend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/real-state/backend",
        "name": "real-state-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/real-state/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/real-state/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/real-state/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "real-state-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "real-state-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "real-state-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/real-state/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "real-state-backend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "real-state-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "real-state-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/real-state/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "real-state-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/real-state/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/real-state/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/real-state/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_nMjttijeYLGwAS3sNCSCbpOtjNGG -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/real-state/backend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_nMjttijeYLGwAS3sNCSCbpOtjNGG -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_nMjttijeYLGwAS3sNCSCbpOtjNGG -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_nMjttijeYLGwAS3sNCSCbpOtjNGG -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JI9jY7ZEYjlU4KjIuy8wZ8AtaB2L -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JI9jY7ZEYjlU4KjIuy8wZ8AtaB2L -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "restaurant-backend": {
      "name": "restaurant-backend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/restaurant/backend",
        "name": "restaurant-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/restaurant/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/restaurant/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/restaurant/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "restaurant-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "restaurant-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "restaurant-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/restaurant/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "restaurant-backend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "restaurant-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "restaurant-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/restaurant/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "restaurant-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/restaurant/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/restaurant/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/restaurant/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_W49jhWw6AWKwIlVG5CW9j8bVpgS1 -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/restaurant/backend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_W49jhWw6AWKwIlVG5CW9j8bVpgS1 -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_W49jhWw6AWKwIlVG5CW9j8bVpgS1 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_W49jhWw6AWKwIlVG5CW9j8bVpgS1 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_Pirj7h06B5vFG2MCj2bXRcNxTe28 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_Pirj7h06B5vFG2MCj2bXRcNxTe28 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "instagram-backend": {
      "name": "instagram-backend",
      "type": "app",
      "data": {
        "root": "apps/L1FG/instagram/backend",
        "name": "instagram-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1FG/instagram/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1FG/instagram/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1FG/instagram/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "instagram-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "instagram-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "instagram-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1FG/instagram/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "instagram-backend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "instagram-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "instagram-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1FG/instagram/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "instagram-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1FG/instagram/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1FG/instagram/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1FG/instagram/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_HCP7PYxV4SCMVuqS7GY9qo6IaUlk -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1FG/instagram/backend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_HCP7PYxV4SCMVuqS7GY9qo6IaUlk -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_HCP7PYxV4SCMVuqS7GY9qo6IaUlk -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_HCP7PYxV4SCMVuqS7GY9qo6IaUlk -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_eSvhgXxERJAhN5VdL4ojh7TJdTLO -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_eSvhgXxERJAhN5VdL4ojh7TJdTLO -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "tinder-be": {
      "name": "tinder-be",
      "type": "app",
      "data": {
        "root": "apps/L1E/tinder/tinder-be",
        "name": "tinder-be",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1E/tinder/tinder-be",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1E/tinder/tinder-be"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1E/tinder/tinder-be"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "tinder-be:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "tinder-be:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "tinder-be:build:production",
                "dev": false
              }
            },
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1E/tinder/tinder-be/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "tinder-backend-1e"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "tinder-backend-1e"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "tinder-backend-1e"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1E/tinder/tinder-be/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "tinder-be:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1E/tinder/tinder-be/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1E/tinder/tinder-be/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1E/tinder/tinder-be",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_7ZA1bFEfYuk6issih3gHoyYVsGuN -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_7ZA1bFEfYuk6issih3gHoyYVsGuN -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_5pYsHtBrIsVaUKtAxm8zNBuDgAiG -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_5pYsHtBrIsVaUKtAxm8zNBuDgAiG -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "tinder-fe": {
      "name": "tinder-fe",
      "type": "app",
      "data": {
        "root": "apps/L1E/tinder/tinder-fe",
        "name": "tinder-fe",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1E/tinder/tinder-fe",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1E/tinder/tinder-fe"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1E/tinder/tinder-fe"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "tinder-fe:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "tinder-fe:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "tinder-fe:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "tinder-fe:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1E/tinder/tinder-fe/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "tinder-frontend-1e"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "tinder-frontend-1e"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "tinder-frontend-1e"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1E/tinder/tinder-fe/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1E/tinder/tinder-fe",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress tinder-fe"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress tinder-fe --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L1E/tinder/tinder-fe/cypress/results",
                "rm -rf apps/L1E/tinder/tinder-fe/.nyc_output",
                "rm -rf apps/L1E/tinder/tinder-fe/.cy",
                "rm -rf apps/L1E/tinder/tinder-fe/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L1E/tinder/tinder-fe/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "tinder-fe:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L1E/tinder/tinder-fe/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JVchUDKuj0OI2BAbaPrNaFpSu6T0 -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1E/tinder/tinder-fe/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JVchUDKuj0OI2BAbaPrNaFpSu6T0 -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1E/tinder/tinder-fe/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1E/tinder/tinder-fe/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1E/tinder/tinder-fe/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1E/tinder/tinder-fe/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JVchUDKuj0OI2BAbaPrNaFpSu6T0 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JVchUDKuj0OI2BAbaPrNaFpSu6T0 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_SiZJrpNCzszdrAvJvSBAkus6eAYO -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_SiZJrpNCzszdrAvJvSBAkus6eAYO -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "example-frontend": {
      "name": "example-frontend",
      "type": "app",
      "data": {
        "root": "apps/example/frontend",
        "name": "example-frontend",
        "$schema": "../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/example/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/example/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/example/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "example-frontend:build",
              "dev": true,
              "port": 4201
            },
            "configurations": {
              "development": {
                "buildTarget": "example-frontend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "example-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "example-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/example/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/example/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "example-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "example-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "example-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/example/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/example/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress example-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress example-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/example/frontend/cypress/results",
                "rm -rf apps/example/frontend/.nyc_output",
                "rm -rf apps/example/frontend/.cy",
                "rm -rf apps/example/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/example/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "example-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/example/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_BfcrI6YAJ4l5M3C1ioVTFPSkoqCW -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/example/frontend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_BfcrI6YAJ4l5M3C1ioVTFPSkoqCW -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_O7pb4k71YEKwzWAmOv3FD74ZD0gW -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_O7pb4k71YEKwzWAmOv3FD74ZD0gW -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_VPxhz5pgMVOLsQ76CvJRU75Cm3Di -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_VPxhz5pgMVOLsQ76CvJRU75Cm3Di -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "hrms-be": {
      "name": "hrms-be",
      "type": "app",
      "data": {
        "root": "apps/L1E/hrms/hrms-be",
        "name": "hrms-be",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1E/hrms/hrms-be",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1E/hrms/hrms-be"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1E/hrms/hrms-be"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "hrms-be:build",
              "dev": true
            },
            "dependsOn": [
              {
                "target": "codegen"
              }
            ],
            "configurations": {
              "development": {
                "buildTarget": "hrms-be:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "hrms-be:build:production",
                "dev": false
              }
            },
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1E/hrms/hrms-be/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "hrms-backend-1e"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "hrms-backend-1e"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "hrms-backend-1e"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1E/hrms/hrms-be/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "hrms-be:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1E/hrms/hrms-be/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1E/hrms/hrms-be/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1E/hrms/hrms-be",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_sfGcoqUFOK9SkwaIMHOr2ClwdN3V -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1E/hrms/hrms-be/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_sfGcoqUFOK9SkwaIMHOr2ClwdN3V -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_sfGcoqUFOK9SkwaIMHOr2ClwdN3V -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_sfGcoqUFOK9SkwaIMHOr2ClwdN3V -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_fKks88K6O1clcjqT2ollaRB3lSu4 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_fKks88K6O1clcjqT2ollaRB3lSu4 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "hrms-fe": {
      "name": "hrms-fe",
      "type": "app",
      "data": {
        "root": "apps/L1E/hrms/hrms-fe",
        "name": "hrms-fe",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1E/hrms/hrms-fe",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1E/hrms/hrms-fe"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1E/hrms/hrms-fe"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "hrms-fe:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "hrms-fe:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "hrms-fe:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "hrms-fe:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1E/hrms/hrms-fe/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "hrms-frontend-1e"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "hrms-frontend-1e"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "hrms-frontend-1e"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1E/hrms/hrms-fe/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1E/hrms/hrms-fe",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress hrms-fe"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress hrms-fe --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L1E/hrms/hrms-fe/cypress/results",
                "rm -rf apps/L1E/hrms/hrms-fe/.nyc_output",
                "rm -rf apps/L1E/hrms/hrms-fe/.cy",
                "rm -rf apps/L1E/hrms/hrms-fe/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L1E/hrms/hrms-fe/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "hrms-fe:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L1E/hrms/hrms-fe/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JcjV1Dn0cxiZvLTPVVBQebG4PlKj -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1E/hrms/hrms-fe/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JcjV1Dn0cxiZvLTPVVBQebG4PlKj -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1E/hrms/hrms-fe/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1E/hrms/hrms-fe/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1E/hrms/hrms-fe/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1E/hrms/hrms-fe/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JcjV1Dn0cxiZvLTPVVBQebG4PlKj -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_JcjV1Dn0cxiZvLTPVVBQebG4PlKj -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_zA51OKg3rHtColVhDjJnaxytY8qo -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_zA51OKg3rHtColVhDjJnaxytY8qo -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "example-backend": {
      "name": "example-backend",
      "type": "app",
      "data": {
        "root": "apps/example/backend",
        "name": "example-backend",
        "$schema": "../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/example/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/example/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/example/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "example-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "example-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "example-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "example-backend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "example-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "example-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/example/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "example-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/example/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/example/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/example/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_GHljCR4z8P9z5NHZspPhAaK45EaG -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/example/backend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_GHljCR4z8P9z5NHZspPhAaK45EaG -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2FoxI3mjkx14N5hgXG6shvCtB29v -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2FoxI3mjkx14N5hgXG6shvCtB29v -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_j8F2ZBNZMn2wQRAFU7gi3pwY4GU1 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_j8F2ZBNZMn2wQRAFU7gi3pwY4GU1 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "file-management": {
      "name": "file-management",
      "type": "lib",
      "data": {
        "root": "libs/file-management",
        "name": "file-management",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "libs/file-management/src",
        "projectType": "library",
        "tags": [],
        "targets": {
          "build": {
            "executor": "nx:run-commands",
            "options": {
              "command": "npx nx test file-management"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "lint": {
            "executor": "@nx/linter:eslint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "libs/file-management/**/*.ts"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "libs/file-management/jest.config.ts",
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          }
        },
        "implicitDependencies": []
      }
    },
    "client": {
      "name": "client",
      "type": "app",
      "data": {
        "root": "apps/example/client",
        "name": "client",
        "$schema": "../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/example/client",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/example/client"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/example/client"
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "client:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "client:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "client:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "client:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/example/client/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "client"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "client"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "production",
            "configurations": {
              "production": {
                "groups": [
                  "client"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "test:local": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/client/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/client/jest.config.ts",
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "graphql-codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/example/client/.env graphql-codegen --config ./apps/example/client/graphql-codegen.yml"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/example/client/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/example/client",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_tIVtzJs0y3661QimP3NIYZIgBv7C -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/example/client/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_tIVtzJs0y3661QimP3NIYZIgBv7C -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "graphql-codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_zPjwQ5Ljok5ZIVnKA1YoTAtBwnIC -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_zPjwQ5Ljok5ZIVnKA1YoTAtBwnIC -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "graphql-codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_W7s8bXKcYpssc3WZsBdsZrJLzlF4 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_W7s8bXKcYpssc3WZsBdsZrJLzlF4 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "graphql-codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "secret-manager": {
      "name": "secret-manager",
      "type": "app",
      "data": {
        "root": "apps/secret-manager",
        "name": "secret-manager",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/secret-manager",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/secret-manager"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/secret-manager"
              },
              "production": {}
            },
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "secret-manager:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "secret-manager:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "secret-manager:build:production",
                "dev": false
              }
            },
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/secret-manager",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/secret-manager/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "secret-manager:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/secret-manager/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/secret-manager/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_4UQNppZDJmC4XNfaofx3fTEqNJMy -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_4UQNppZDJmC4XNfaofx3fTEqNJMy -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "server": {
      "name": "server",
      "type": "app",
      "data": {
        "root": "apps/example/server",
        "name": "server",
        "$schema": "../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/example/server",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/example/server"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/example/server"
              },
              "production": {}
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "server:build",
              "dev": true,
              "port": 8000
            },
            "configurations": {
              "development": {
                "buildTarget": "server:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "server:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "server:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/example/server/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "graphql-codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config apps/example/server/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "get-secrets:development": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "server"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "server"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:production": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "production",
            "configurations": {
              "production": {
                "groups": [
                  "server"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/server/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/example/server/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/example/server",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2FoxI3mjkx14N5hgXG6shvCtB29v -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2FoxI3mjkx14N5hgXG6shvCtB29v -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "graphql-codegen"
              },
              {
                "target": "export-env"
              },
              {
                "target": "get-secrets:development"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_908aVqj2NLarCpn9ooGMdUpdxUFs -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_908aVqj2NLarCpn9ooGMdUpdxUFs -- vercel --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "graphql-codegen"
              },
              {
                "target": "export-env"
              },
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_908aVqj2NLarCpn9ooGMdUpdxUFs -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_908aVqj2NLarCpn9ooGMdUpdxUFs -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "graphql-codegen"
              },
              {
                "target": "export-env"
              },
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_j8F2ZBNZMn2wQRAFU7gi3pwY4GU1 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_j8F2ZBNZMn2wQRAFU7gi3pwY4GU1 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:production"
              },
              {
                "target": "export-env"
              },
              {
                "target": "graphql-codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "documentation": {
      "name": "documentation",
      "type": "app",
      "data": {
        "root": "apps/documentation",
        "name": "documentation",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/documentation",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/documentation"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/documentation"
              },
              "production": {}
            },
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "documentation:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "documentation:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "documentation:build:production",
                "dev": false
              }
            },
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "documentation:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/documentation/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/documentation/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "codegen": {
            "executor": "nx:run-commands",
            "defaultConfiguration": "development",
            "configurations": {
              "local": {
                "commands": [
                  "npx env-cmd -f apps/documentation/.env.local graphql-codegen --config ./apps/documentation/graphql-codegen.yml"
                ]
              },
              "development": {
                "commands": [
                  "npx env-cmd -f apps/documentation/.env.development graphql-codegen --config ./apps/documentation/graphql-codegen.yml"
                ]
              },
              "preview": {
                "commands": [
                  "npx env-cmd -f apps/documentation/.env.preview graphql-codegen --config ./apps/documentation/graphql-codegen.yml"
                ]
              },
              "production": {
                "commands": [
                  "npx env-cmd -f apps/documentation/.env.production graphql-codegen --config ./apps/documentation/graphql-codegen.yml"
                ]
              }
            },
            "options": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/documentation",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "get-secrets": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "production",
            "configurations": {
              "production": {
                "groups": [
                  "cms-dashboard"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/documentation/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_LGvhEMiSYEfIIwN9FKaox02Q1od0 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_LGvhEMiSYEfIIwN9FKaox02Q1od0 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "federation": {
      "name": "federation",
      "type": "app",
      "data": {
        "root": "apps/federation",
        "name": "federation",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/federation/src",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/esbuild:esbuild",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "local",
            "options": {
              "platform": "node",
              "outputPath": "dist/apps/federation",
              "format": [
                "cjs"
              ],
              "main": "apps/federation/src/index.ts",
              "tsConfig": "apps/federation/tsconfig.app.json",
              "assets": [
                "apps/federation/src/assets"
              ],
              "generatePackageJson": true,
              "esbuildOptions": {
                "sourcemap": true,
                "outExtension": {
                  ".js": ".js"
                }
              }
            },
            "configurations": {
              "local": {
                "envFiles": [
                  ".env.local"
                ]
              },
              "development": {
                "envFiles": [
                  ".env.development"
                ]
              },
              "preview": {
                "envFiles": [
                  ".env.preview"
                ]
              },
              "testing": {
                "envFiles": [
                  ".env.testing"
                ]
              },
              "production": {
                "envFiles": [
                  ".env.production"
                ]
              }
            },
            "parallelism": true,
            "cache": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/js:node",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "federation:build"
            },
            "configurations": {
              "development": {
                "buildTarget": "federation:build:development"
              },
              "production": {
                "buildTarget": "federation:build:production"
              }
            },
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/federation/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/federation",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "dev-local": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                {
                  "command": "npx nx dev-local-federation scripts args",
                  "forwardAllArgs": true
                }
              ]
            },
            "dependsOn": [
              {
                "target": "clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/federation/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "production",
            "configurations": {
              "production": {
                "groups": [
                  "federation"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "add-secrets": {
            "executor": "@pinecone-intern-monorepo/secrets:add",
            "configurations": {},
            "options": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/federation/.env.development nx build --skip-nx-cache  federation --configuration=development",
                "cp apps/federation/vercel.json dist/apps/federation",
                "cp apps/federation/.env.development dist/apps/federation/.env",
                "npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_9XY6hK0JlilqnXQIMz5csGoSbui5 -- vercel pull --yes --environment=production  --token=$VERCEL_TOKEN",
                "mv .vercel dist/apps/federation",
                "cd dist/apps/federation; npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_9XY6hK0JlilqnXQIMz5csGoSbui5 -- vercel --prod  --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/federation/.env.preview nx build --skip-nx-cache  federation --configuration=preview",
                "cp apps/federation/vercel.json dist/apps/federation",
                "cp apps/federation/.env.preview dist/apps/federation/.env",
                "npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_sRlo01gVhTr1vuHQSJ7yAs18ZsF4 -- vercel pull --yes --environment=preview  --token=$VERCEL_TOKEN",
                "mv .vercel dist/apps/federation",
                "cd dist/apps/federation; npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_sRlo01gVhTr1vuHQSJ7yAs18ZsF4 -- vercel  --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/federation/.env.testing nx build --skip-nx-cache  federation --configuration=testing",
                "cp apps/federation/vercel.json dist/apps/federation",
                "cp apps/federation/.env.testing dist/apps/federation/.env",
                "npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_sRlo01gVhTr1vuHQSJ7yAs18ZsF4 -- vercel pull --yes --environment=production  --token=$VERCEL_TOKEN",
                "mv .vercel dist/apps/federation",
                "cd dist/apps/federation; npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_sRlo01gVhTr1vuHQSJ7yAs18ZsF4 -- vercel --prod  --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/federation/.env.production nx build --skip-nx-cache  federation --configuration=production",
                "cp apps/federation/vercel.json dist/apps/federation",
                "cp apps/federation/.env.production dist/apps/federation/.env",
                "npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_3YAzLHEAqjaL1qEt7kNMHN39SrI1 -- vercel pull --yes --environment=production  --token=$VERCEL_TOKEN",
                "mv .vercel dist/apps/federation",
                "cd dist/apps/federation; npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_3YAzLHEAqjaL1qEt7kNMHN39SrI1 -- vercel --prod  --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "generator": {
      "name": "generator",
      "type": "lib",
      "data": {
        "root": "libs/generator",
        "sourceRoot": "libs/generator/src",
        "name": "generator",
        "projectType": "library",
        "tags": [
          "npm:public"
        ],
        "metadata": {
          "targetGroups": {},
          "js": {
            "packageName": "@pinecone-intern-monorepo/generator"
          }
        },
        "targets": {
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "@nx/js:tsc",
            "outputs": [
              "{options.outputPath}"
            ],
            "options": {
              "outputPath": "dist/libs/generator",
              "main": "libs/generator/src/index.ts",
              "tsConfig": "libs/generator/tsconfig.lib.json",
              "assets": [
                "libs/generator/*.md",
                {
                  "input": "./libs/generator/src",
                  "glob": "**/!(*.ts)",
                  "output": "./src"
                },
                {
                  "input": "./libs/generator/src",
                  "glob": "**/*.d.ts",
                  "output": "./src"
                },
                {
                  "input": "./libs/generator",
                  "glob": "generators.json",
                  "output": "."
                },
                {
                  "input": "./libs/generator",
                  "glob": "executors.json",
                  "output": "."
                }
              ]
            },
            "configurations": {},
            "parallelism": true,
            "cache": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          }
        },
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "implicitDependencies": []
      }
    },
    "scripts": {
      "name": "scripts",
      "type": "lib",
      "data": {
        "root": "libs/scripts",
        "name": "scripts",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "libs/scripts/src",
        "projectType": "library",
        "tags": [],
        "targets": {
          "build": {
            "executor": "nx:run-commands",
            "options": {
              "command": "npx nx test scripts"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "lint": {
            "executor": "@nx/linter:eslint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "libs/scripts/**/*.ts"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "libs/scripts/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat libs/scripts/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "dev-local-federation": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/commands/dev-local-federation-command.ts"
            },
            "configurations": {},
            "parallelism": true
          },
          "preview-action": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/actions/preview/preview-action.ts"
            },
            "dependsOn": [
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "pre-commit": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/pre-commit/pre-commit-script.ts"
            },
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev-action": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/actions/deployment/deploy-dev-action.ts"
            },
            "dependsOn": [
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing-action": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/actions/deployment/deploy-testing-action.ts"
            },
            "dependsOn": [
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod-action": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/actions/deployment/deploy-prod-action.ts"
            },
            "dependsOn": [
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "secrets": {
      "name": "secrets",
      "type": "lib",
      "data": {
        "root": "libs/secrets",
        "sourceRoot": "libs/secrets/src",
        "name": "secrets",
        "projectType": "library",
        "tags": [
          "npm:public"
        ],
        "metadata": {
          "targetGroups": {},
          "js": {
            "packageName": "@pinecone-intern-monorepo/secrets"
          }
        },
        "targets": {
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "@nx/js:tsc",
            "outputs": [
              "{options.outputPath}"
            ],
            "options": {
              "outputPath": "dist/libs/secrets",
              "main": "libs/secrets/src/index.ts",
              "tsConfig": "libs/secrets/tsconfig.lib.json",
              "assets": [
                "libs/secrets/*.md",
                {
                  "input": "./libs/secrets/src",
                  "glob": "**/!(*.ts)",
                  "output": "./src"
                },
                {
                  "input": "./libs/secrets/src",
                  "glob": "**/*.d.ts",
                  "output": "./src"
                },
                {
                  "input": "./libs/secrets",
                  "glob": "generators.json",
                  "output": "."
                },
                {
                  "input": "./libs/secrets",
                  "glob": "executors.json",
                  "output": "."
                }
              ]
            },
            "configurations": {},
            "parallelism": true,
            "cache": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "libs/secrets/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "libs/secrets/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          }
        },
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "implicitDependencies": []
      }
    },
    "shadcn": {
      "name": "shadcn",
      "type": "lib",
      "data": {
        "root": "libs/shadcn",
        "name": "shadcn",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "libs/shadcn/src",
        "projectType": "library",
        "tags": [
          "type:ui",
          "scope:shared",
          "type:util"
        ],
        "targets": {
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "libs/shadcn/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          }
        },
        "implicitDependencies": []
      }
    },
    "docs": {
      "name": "docs",
      "type": "app",
      "data": {
        "root": "docs",
        "name": "docs",
        "$schema": "../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "docs",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/docs"
            },
            "configurations": {
              "development": {
                "outputPath": "docs"
              },
              "production": {}
            },
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "docs:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "docs:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "docs:build:production",
                "dev": false
              }
            },
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "docs/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "docs:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "docs/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          }
        },
        "implicitDependencies": []
      }
    }
  },
  "externalNodes": {},
  "dependencies": {
    "concert-ticket-frontend": [
      {
        "source": "concert-ticket-frontend",
        "target": "shadcn",
        "type": "static"
      }
    ],
    "concert-ticket-backend": [],
    "hotel-booking-frontend": [
      {
        "source": "hotel-booking-frontend",
        "target": "shadcn",
        "type": "static"
      }
    ],
    "hotel-booking-backend": [],
    "real-state-frontend": [],
    "restaurant-frontend": [],
    "instagram-frontend": [],
    "real-state-backend": [],
    "restaurant-backend": [],
    "instagram-backend": [],
    "tinder-be": [],
    "tinder-fe": [],
    "example-frontend": [],
    "hrms-be": [],
    "hrms-fe": [],
    "example-backend": [],
    "file-management": [],
    "client": [],
    "secret-manager": [],
    "server": [],
    "documentation": [],
    "federation": [],
    "generator": [],
    "scripts": [],
    "secrets": [],
    "shadcn": [],
    "docs": []
  },
  "version": "6.0"
}