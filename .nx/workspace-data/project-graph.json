{
  "nodes": {
    "real-estate-frontend": {
      "name": "real-estate-frontend",
      "type": "app",
      "data": {
        "root": "apps/L2A/real-estate/real-estate-frontend",
        "name": "real-estate-frontend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2A/real-estate/real-estate-frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2A/real-estate/real-estate-frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2A/real-estate/real-estate-frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "real-estate-frontend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "real-estate-frontend:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "real-estate-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "real-estate-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2A/real-estate/real-estate-frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "real-estate-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "real-estate-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "real-estate-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2A/real-estate/real-estate-frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2A/real-estate/real-estate-frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx execute-cypress scripts real-estate-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress real-estate-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L2A/real-estate/real-estate-frontend/cypress/results",
                "rm -rf apps/L2A/real-estate/real-estate-frontend/.nyc_output",
                "rm -rf apps/L2A/real-estate/real-estate-frontend/.cy",
                "rm -rf apps/L2A/real-estate/real-estate-frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L2A/real-estate/real-estate-frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "real-estate-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L2A/real-estate/real-estate-frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_FfZUu1PN4O7Hx3Ii7TKffahrjfhd -- vercel pull --yes --environment=preview --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "npx env-cmd -f apps/L2A/real-estate/real-estate-frontend/.env vercel build --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_FfZUu1PN4O7Hx3Ii7TKffahrjfhd -- vercel --archive=tgz --prebuilt --token=7ZRRHMp2ZOk8OLakDDTVTw4o"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_FfZUu1PN4O7Hx3Ii7TKffahrjfhd -- vercel pull --yes --environment=production --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "vercel build --prod --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_FfZUu1PN4O7Hx3Ii7TKffahrjfhd -- vercel --prebuilt --prod --token=7ZRRHMp2ZOk8OLakDDTVTw4o"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2A/real-estate/real-estate-frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/real-estate/real-estate-frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/real-estate/real-estate-frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/real-estate/real-estate-frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_FfZUu1PN4O7Hx3Ii7TKffahrjfhd -- vercel pull --yes --environment=production --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "vercel build --prod --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_FfZUu1PN4O7Hx3Ii7TKffahrjfhd -- vercel --prebuilt --prod --token=7ZRRHMp2ZOk8OLakDDTVTw4o"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "real-estate-backend": {
      "name": "real-estate-backend",
      "type": "app",
      "data": {
        "root": "apps/L2A/real-estate/real-estate-backend",
        "name": "real-estate-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2A/real-estate/real-estate-backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2A/real-estate/real-estate-backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2A/real-estate/real-estate-backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "real-estate-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "real-estate-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "real-estate-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2A/real-estate/real-estate-backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "real-estate-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "real-estate-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/real-estate/real-estate-backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "real-estate-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2A/real-estate/real-estate-backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2A/real-estate/real-estate-backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2A/real-estate/real-estate-backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_8Slo1TZbeltuYWt06gS9EWwvu1gy -- vercel pull --yes --environment=preview --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "npx env-cmd -f apps/L2A/real-estate/real-estate-backend/.env vercel build --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_8Slo1TZbeltuYWt06gS9EWwvu1gy -- vercel --archive=tgz --prebuilt --token=7ZRRHMp2ZOk8OLakDDTVTw4o"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_8Slo1TZbeltuYWt06gS9EWwvu1gy -- vercel pull --yes --environment=production --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "vercel build --prod --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_8Slo1TZbeltuYWt06gS9EWwvu1gy -- vercel --prebuilt --prod --token=7ZRRHMp2ZOk8OLakDDTVTw4o"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_x9ngG4siuGl0m1kF6VpIMlEc3nAY -- vercel pull --yes --environment=production --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "vercel build --prod --token=7ZRRHMp2ZOk8OLakDDTVTw4o",
                "npx dotenv -v VERCEL_ORG_ID=team_RB148mU2MevcZqv48feSkleO -v VERCEL_PROJECT_ID=prj_x9ngG4siuGl0m1kF6VpIMlEc3nAY -- vercel --prebuilt --prod --token=7ZRRHMp2ZOk8OLakDDTVTw4o"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "Tinder-frontend-2025-2B": {
      "name": "Tinder-frontend-2025-2B",
      "type": "app",
      "data": {
        "root": "apps/L2B/tinder/tinder-frontend",
        "name": "Tinder-frontend-2025-2B",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2B/tinder/tinder-frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2B/tinder/tinder-frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2B/tinder/tinder-frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "Tinder-frontend-2025-2B:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "Tinder-frontend-2025-2B:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "Tinder-frontend-2025-2B:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "Tinder-frontend-2025-2B:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2B/tinder/tinder-frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "Tinder-frontend-2025-2B"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "Tinder-frontend-2025-2B"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "Tinder-frontend-2025-2B"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2B/tinder/tinder-frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2B/tinder/tinder-frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress Tinder-frontend-2025-2B"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress Tinder-frontend-2025-2B --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L2B/tinder/tinder-frontend/cypress/results",
                "rm -rf apps/L2B/tinder/tinder-frontend/.nyc_output",
                "rm -rf apps/L2B/tinder/tinder-frontend/.cy",
                "rm -rf apps/L2B/tinder/tinder-frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L2B/tinder/tinder-frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "Tinder-frontend-2025-2B:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L2B/tinder/tinder-frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_dVr2ZTJ8PVvAm2dTpyV5AwsIQFtb -- vercel pull --yes --environment=preview --token=moFSkA7gnh6aZGKlHU6jxldw",
                "npx env-cmd -f apps/L2B/tinder/tinder-frontend/.env vercel build --token=moFSkA7gnh6aZGKlHU6jxldw",
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_dVr2ZTJ8PVvAm2dTpyV5AwsIQFtb -- vercel --archive=tgz --prebuilt --token=moFSkA7gnh6aZGKlHU6jxldw"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_dVr2ZTJ8PVvAm2dTpyV5AwsIQFtb -- vercel pull --yes --environment=production --token=moFSkA7gnh6aZGKlHU6jxldw",
                "vercel build --prod --token=moFSkA7gnh6aZGKlHU6jxldw",
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_dVr2ZTJ8PVvAm2dTpyV5AwsIQFtb -- vercel --prebuilt --prod --token=moFSkA7gnh6aZGKlHU6jxldw"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2B/tinder/tinder-frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2B/tinder/tinder-frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2B/tinder/tinder-frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2B/tinder/tinder-frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_dVr2ZTJ8PVvAm2dTpyV5AwsIQFtb -- vercel pull --yes --environment=production --token=moFSkA7gnh6aZGKlHU6jxldw",
                "vercel build --prod --token=moFSkA7gnh6aZGKlHU6jxldw",
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_dVr2ZTJ8PVvAm2dTpyV5AwsIQFtb -- vercel --prebuilt --prod --token=moFSkA7gnh6aZGKlHU6jxldw"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "leave-request-frontend": {
      "name": "leave-request-frontend",
      "type": "app",
      "data": {
        "root": "apps/L2A/leave-request/frontend",
        "name": "leave-request-frontend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2A/leave-request/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2A/leave-request/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2A/leave-request/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "leave-request-frontend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "leave-request-frontend:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "leave-request-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "leave-request-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2A/leave-request/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "leave-request-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "leave-request-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "leave-request-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2A/leave-request/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2A/leave-request/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx execute-cypress scripts leave-request-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress leave-request-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L2A/leave-request/frontend/cypress/results",
                "rm -rf apps/L2A/leave-request/frontend/.nyc_output",
                "rm -rf apps/L2A/leave-request/frontend/.cy",
                "rm -rf apps/L2A/leave-request/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L2A/leave-request/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "leave-request-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L2A/leave-request/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_cQdTje3d6YvWLGqrQOnzJ7YHR70M -- vercel pull --yes --environment=preview --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "npx env-cmd -f apps/L2A/leave-request/frontend/.env vercel build --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_cQdTje3d6YvWLGqrQOnzJ7YHR70M -- vercel --archive=tgz --prebuilt --token=tvbgzdSJpC58tEVkZEwf0PCW"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_cQdTje3d6YvWLGqrQOnzJ7YHR70M -- vercel pull --yes --environment=production --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "vercel build --prod --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_cQdTje3d6YvWLGqrQOnzJ7YHR70M -- vercel --prebuilt --prod --token=tvbgzdSJpC58tEVkZEwf0PCW"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2A/leave-request/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/leave-request/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/leave-request/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/leave-request/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_cQdTje3d6YvWLGqrQOnzJ7YHR70M -- vercel pull --yes --environment=production --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "vercel build --prod --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_cQdTje3d6YvWLGqrQOnzJ7YHR70M -- vercel --prebuilt --prod --token=tvbgzdSJpC58tEVkZEwf0PCW"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "Tinder-backend-2025-2B": {
      "name": "Tinder-backend-2025-2B",
      "type": "app",
      "data": {
        "root": "apps/L2B/tinder/tinder-backend",
        "name": "Tinder-backend-2025-2B",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2B/tinder/tinder-backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2B/tinder/tinder-backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2B/tinder/tinder-backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "Tinder-backend-2025-2B:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "Tinder-backend-2025-2B:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "Tinder-backend-2025-2B:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2B/tinder/tinder-backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "Tinder-backend-2025-2B"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "Tinder-backend-2025-2B"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2B/tinder/tinder-backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "Tinder-backend-2025-2B:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2B/tinder/tinder-backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2B/tinder/tinder-backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2B/tinder/tinder-backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_HsmHlUISoKQmVVF10KV3P3VtqW1n -- vercel pull --yes --environment=preview --token=moFSkA7gnh6aZGKlHU6jxldw",
                "npx env-cmd -f apps/L2B/tinder/tinder-backend/.env vercel build --token=moFSkA7gnh6aZGKlHU6jxldw",
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_HsmHlUISoKQmVVF10KV3P3VtqW1n -- vercel --archive=tgz --prebuilt --token=moFSkA7gnh6aZGKlHU6jxldw"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_HsmHlUISoKQmVVF10KV3P3VtqW1n -- vercel pull --yes --environment=production --token=moFSkA7gnh6aZGKlHU6jxldw",
                "vercel build --prod --token=moFSkA7gnh6aZGKlHU6jxldw",
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_HsmHlUISoKQmVVF10KV3P3VtqW1n -- vercel --prebuilt --prod --token=moFSkA7gnh6aZGKlHU6jxldw"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_HA2tJbNVFLAHV4955WYrboJXz3Oa -- vercel pull --yes --environment=production --token=moFSkA7ganh6aZGKlHU6jxldw",
                "vercel build --prod --token=moFSkA7gnh6aZGKlHU6jxldw",
                "npx dotenv -v VERCEL_ORG_ID=team_4n8jBJMq6HnRwl0iWM4yUG7U -v VERCEL_PROJECT_ID=prj_HA2tJbNVFLAHV4955WYrboJXz3Oa -- vercel --prebuilt --prod --token=moFSkA7gnh6aZGKlHU6jxldw"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "leave-request-backend": {
      "name": "leave-request-backend",
      "type": "app",
      "data": {
        "root": "apps/L2A/leave-request/backend",
        "name": "leave-request-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2A/leave-request/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2A/leave-request/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2A/leave-request/backend"
              },
              "production": {
                "outputPath": "dist/apps/L2A/leave-request/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "leave-request-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "leave-request-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "leave-request-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2A/leave-request/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "leave-request-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "leave-request-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/leave-request/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "leave-request-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "dotenv -e apps/L2A/leave-request/backend/.env -- echo 'env loaded'"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2A/leave-request/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rimraf dist/apps/L2A/leave-request/backend .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_iuodqpA6cwEWzgKkfXNytObe0roU -- vercel pull --yes --environment=preview --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "vercel build --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_iuodqpA6cwEWzgKkfXNytObe0roU -- vercel --archive=tgz --prebuilt --token=tvbgzdSJpC58tEVkZEwf0PCW"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_iuodqpA6cwEWzgKkfXNytObe0roU -- vercel pull --yes --environment=production --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "vercel build --prod --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_iuodqpA6cwEWzgKkfXNytObe0roU -- vercel --prebuilt --prod --token=tvbgzdSJpC58tEVkZEwf0PCW"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_7qWerkJ77obzP18yYnzkNKj1XSVY -- vercel pull --yes --environment=production --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "vercel build --prod --token=tvbgzdSJpC58tEVkZEwf0PCW",
                "npx dotenv -v VERCEL_ORG_ID=team_hm4xpLsWIgJNWw9mWekgo10M -v VERCEL_PROJECT_ID=prj_7qWerkJ77obzP18yYnzkNKj1XSVY -- vercel --prebuilt --prod --token=tvbgzdSJpC58tEVkZEwf0PCW"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "Hotel-Booking-BE": {
      "name": "Hotel-Booking-BE",
      "type": "app",
      "data": {
        "root": "apps/L2B/hotel-booking/server",
        "name": "Hotel-Booking-BE",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2B/hotel-booking/server",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2B/hotel-booking/server"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2B/hotel-booking/server"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "Hotel-Booking-BE:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "Hotel-Booking-BE:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "Hotel-Booking-BE:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2B/hotel-booking/server/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "Hotel-Booking-BE"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "Hotel-Booking-BE"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2B/hotel-booking/server/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "Hotel-Booking-BE:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2B/hotel-booking/server/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2B/hotel-booking/server/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2B/hotel-booking/server",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_LZ4i1E6HQ2AKeiN2Xc3ZIFqnBzGT -- vercel pull --yes --environment=preview --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "npx env-cmd -f apps/L2B/hotel-booking/server/.env vercel build --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_LZ4i1E6HQ2AKeiN2Xc3ZIFqnBzGT -- vercel --archive=tgz --prebuilt --token=XGnEoYleBRGzp4vVQEiOVLBB"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_LZ4i1E6HQ2AKeiN2Xc3ZIFqnBzGT -- vercel pull --yes --environment=production --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "vercel build --prod --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_LZ4i1E6HQ2AKeiN2Xc3ZIFqnBzGT -- vercel --prebuilt --prod --token=XGnEoYleBRGzp4vVQEiOVLBB"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_2dizkADHdKzcIKXDflUWAaRRBJyo -- vercel pull --yes --environment=production --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "vercel build --prod --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_2dizkADHdKzcIKXDflUWAaRRBJyo -- vercel --prebuilt --prod --token=XGnEoYleBRGzp4vVQEiOVLBB"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "Hotel-Booking-FE": {
      "name": "Hotel-Booking-FE",
      "type": "app",
      "data": {
        "root": "apps/L2B/hotel-booking/client",
        "name": "Hotel-Booking-FE",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2B/hotel-booking/client",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2B/hotel-booking/client"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2B/hotel-booking/client"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "Hotel-Booking-FE:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "Hotel-Booking-FE:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "Hotel-Booking-FE:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "Hotel-Booking-FE:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2B/hotel-booking/client/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "Hotel-Booking-FE"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "Hotel-Booking-FE"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "Hotel-Booking-FE"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2B/hotel-booking/client/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2B/hotel-booking/client",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress Hotel-Booking-FE"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress Hotel-Booking-FE --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L2B/hotel-booking/client/cypress/results",
                "rm -rf apps/L2B/hotel-booking/client/.nyc_output",
                "rm -rf apps/L2B/hotel-booking/client/.cy",
                "rm -rf apps/L2B/hotel-booking/client/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L2B/hotel-booking/client/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "Hotel-Booking-FE:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L2B/hotel-booking/client/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_ezQfd9g4EncB04kjcbmUSPNRUSut -- vercel pull --yes --environment=preview --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "npx env-cmd -f apps/L2B/hotel-booking/client/.env vercel build --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_ezQfd9g4EncB04kjcbmUSPNRUSut -- vercel --archive=tgz --prebuilt --token=XGnEoYleBRGzp4vVQEiOVLBB"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_ezQfd9g4EncB04kjcbmUSPNRUSut -- vercel pull --yes --environment=production --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "vercel build --prod --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_ezQfd9g4EncB04kjcbmUSPNRUSut -- vercel --prebuilt --prod --token=XGnEoYleBRGzp4vVQEiOVLBB"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2B/hotel-booking/client/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2B/hotel-booking/client/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2B/hotel-booking/client/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2B/hotel-booking/client/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_2tpkJMTv1w3hfkdAjEmTUKmv0MV0 -- vercel pull --yes --environment=production --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "vercel build --prod --token=XGnEoYleBRGzp4vVQEiOVLBB",
                "npx dotenv -v VERCEL_ORG_ID=team_JTFn1ZK1iZht8Bg64a645DAu -v VERCEL_PROJECT_ID=prj_2tpkJMTv1w3hfkdAjEmTUKmv0MV0 -- vercel --prebuilt --prod --token=XGnEoYleBRGzp4vVQEiOVLBB"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "restaurant-frontend": {
      "name": "restaurant-frontend",
      "type": "app",
      "data": {
        "root": "apps/L2A/restaurant/frontend",
        "name": "restaurant-frontend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2A/restaurant/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2A/restaurant/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2A/restaurant/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "restaurant-frontend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "restaurant-frontend:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "restaurant-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "restaurant-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2A/restaurant/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "restaurant-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "restaurant-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "restaurant-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2A/restaurant/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2A/restaurant/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx execute-cypress scripts restaurant-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress restaurant-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L2A/restaurant/frontend/cypress/results",
                "rm -rf apps/L2A/restaurant/frontend/.nyc_output",
                "rm -rf apps/L2A/restaurant/frontend/.cy",
                "rm -rf apps/L2A/restaurant/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L2A/restaurant/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "restaurant-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L2A/restaurant/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_q3JDAy4GgbcmNNKlNbb3O0UDwWiL -- vercel pull --yes --environment=preview --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "npx env-cmd -f apps/L2A/restaurant/frontend/.env vercel build --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_q3JDAy4GgbcmNNKlNbb3O0UDwWiL -- vercel --archive=tgz --prebuilt --token=qQSL55vu6MrlyY7vYCfJMXY0"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_q3JDAy4GgbcmNNKlNbb3O0UDwWiL -- vercel pull --yes --environment=production --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "vercel build --prod --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_q3JDAy4GgbcmNNKlNbb3O0UDwWiL -- vercel --prebuilt --prod --token=qQSL55vu6MrlyY7vYCfJMXY0"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2A/restaurant/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/restaurant/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/restaurant/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/restaurant/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_q3JDAy4GgbcmNNKlNbb3O0UDwWiL -- vercel pull --yes --environment=production --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "vercel build --prod --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_q3JDAy4GgbcmNNKlNbb3O0UDwWiL -- vercel --prebuilt --prod --token=qQSL55vu6MrlyY7vYCfJMXY0"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "restaurant-backend": {
      "name": "restaurant-backend",
      "type": "app",
      "data": {
        "root": "apps/L2A/restaurant/backend",
        "name": "restaurant-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2A/restaurant/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2A/restaurant/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2A/restaurant/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "restaurant-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "restaurant-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "restaurant-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2A/restaurant/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "restaurant-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "restaurant-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/restaurant/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "restaurant-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2A/restaurant/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2A/restaurant/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2A/restaurant/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_TrxIcSfVxJNlHOEFect9SFqsB109 -- vercel pull --yes --environment=preview --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "npx env-cmd -f apps/L2A/restaurant/backend/.env vercel build --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_TrxIcSfVxJNlHOEFect9SFqsB109 -- vercel --archive=tgz --prebuilt --token=qQSL55vu6MrlyY7vYCfJMXY0"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_TrxIcSfVxJNlHOEFect9SFqsB109 -- vercel pull --yes --environment=production --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "vercel build --prod --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_TrxIcSfVxJNlHOEFect9SFqsB109 -- vercel --prebuilt --prod --token=qQSL55vu6MrlyY7vYCfJMXY0"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_Jc0dH5xV7AlvOjotEQGZCrHagCB2 -- vercel pull --yes --environment=production --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "vercel build --prod --token=qQSL55vu6MrlyY7vYCfJMXY0",
                "npx dotenv -v VERCEL_ORG_ID=team_a1lI9cKGYhppAZod3cGrfZst -v VERCEL_PROJECT_ID=prj_Jc0dH5xV7AlvOjotEQGZCrHagCB2 -- vercel --prebuilt --prod --token=qQSL55vu6MrlyY7vYCfJMXY0"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "chatbot-frontend": {
      "name": "chatbot-frontend",
      "type": "app",
      "data": {
        "root": "apps/L1US/chatbot/frontend",
        "name": "chatbot-frontend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1US/chatbot/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1US/chatbot/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1US/chatbot/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "chatbot-frontend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "chatbot-frontend:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "chatbot-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "chatbot-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1US/chatbot/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "chatbot-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "chatbot-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "chatbot-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1US/chatbot/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1US/chatbot/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress chatbot-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress chatbot-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L1US/chatbot/frontend/cypress/results",
                "rm -rf apps/L1US/chatbot/frontend/.nyc_output",
                "rm -rf apps/L1US/chatbot/frontend/.cy",
                "rm -rf apps/L1US/chatbot/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L1US/chatbot/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "chatbot-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L1US/chatbot/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_VVaVEAUUepPmT2Ft6P2szMx0fBv2 -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1US/chatbot/frontend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_VVaVEAUUepPmT2Ft6P2szMx0fBv2 -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_VVaVEAUUepPmT2Ft6P2szMx0fBv2 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_VVaVEAUUepPmT2Ft6P2szMx0fBv2 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_nD0xqWkAqesVkvdztNpz0huymNMI -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_nD0xqWkAqesVkvdztNpz0huymNMI -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1US/chatbot/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1US/chatbot/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1US/chatbot/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1US/chatbot/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2OA3YWdx74G1Fddg8ORaEOXjjOmk -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2OA3YWdx74G1Fddg8ORaEOXjjOmk -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "chatbot-backend": {
      "name": "chatbot-backend",
      "type": "app",
      "data": {
        "root": "apps/L1US/chatbot/backend",
        "name": "chatbot-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L1US/chatbot/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L1US/chatbot/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L1US/chatbot/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "chatbot-backend:build",
              "dev": true
            },
            "dependsOn": [
              {
                "target": "codegen"
              }
            ],
            "configurations": {
              "development": {
                "buildTarget": "chatbot-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "chatbot-backend:build:production",
                "dev": false
              }
            },
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L1US/chatbot/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "chatbot-backend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "chatbot-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "chatbot-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L1US/chatbot/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "chatbot-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L1US/chatbot/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L1US/chatbot/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L1US/chatbot/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_1CX632sJDXehFPIMptIn5qsc5YGK -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/L1US/chatbot/backend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_1CX632sJDXehFPIMptIn5qsc5YGK -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_A69xOBkbbHEp1tAx0l0d0uOsTRih -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_A69xOBkbbHEp1tAx0l0d0uOsTRih -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_mgYejuw7DlzRXyCKJtolGQ6JA9JZ -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_mgYejuw7DlzRXyCKJtolGQ6JA9JZ -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "concert": {
      "name": "concert",
      "type": "app",
      "data": {
        "root": "apps/L2A/concert/frontend",
        "name": "concert",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2A/concert/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2A/concert/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2A/concert/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "concert:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "concert:build:development",
                "dev": true,
                "port": 4201
              },
              "production": {
                "buildTarget": "concert:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen:dev",
                "params": "forward"
              },
              {
                "target": "export-env",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "concert:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2A/concert/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "concert"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "concert"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "concert"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2A/concert/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2A/concert/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx execute-cypress scripts concert"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress concert --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/L2A/concert/frontend/cypress/results",
                "rm -rf apps/L2A/concert/frontend/.nyc_output",
                "rm -rf apps/L2A/concert/frontend/.cy",
                "rm -rf apps/L2A/concert/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/L2A/concert/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "concert:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/L2A/concert/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_sZhFT82smsyQuFEELgCvjxijS08x -- vercel pull --yes --environment=preview --token=dop38xpGKjYSlE3GLRAh6UAx",
                "npx env-cmd -f apps/L2A/concert/frontend/.env vercel build --token=dop38xpGKjYSlE3GLRAh6UAx",
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_sZhFT82smsyQuFEELgCvjxijS08x -- vercel --archive=tgz --prebuilt --token=dop38xpGKjYSlE3GLRAh6UAx"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:testing",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_sZhFT82smsyQuFEELgCvjxijS08x -- vercel pull --yes --environment=production --token=dop38xpGKjYSlE3GLRAh6UAx",
                "vercel build --prod --token=dop38xpGKjYSlE3GLRAh6UAx",
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_sZhFT82smsyQuFEELgCvjxijS08x -- vercel --prebuilt --prod --token=dop38xpGKjYSlE3GLRAh6UAx"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:dev",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2A/concert/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "codegen:prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/concert/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:prod"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/concert/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "codegen:testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/concert/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_9FlJox8xA9acEGWZGC8vocJzMUmB -- vercel pull --yes --environment=production --token=dop38xpGKjYSlE3GLRAh6UAx",
                "vercel build --prod --token=dop38xpGKjYSlE3GLRAh6UAx",
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_9FlJox8xA9acEGWZGC8vocJzMUmB -- vercel --prebuilt --prod --token=dop38xpGKjYSlE3GLRAh6UAx"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen:prod",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "concert-backend": {
      "name": "concert-backend",
      "type": "app",
      "data": {
        "root": "apps/L2A/concert/backend",
        "name": "concert-backend",
        "$schema": "../../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/L2A/concert/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/L2A/concert/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "dist/apps/L2A/concert/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "concert-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "concert-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "concert-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/L2A/concert/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "concert-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "concert-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/L2A/concert/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "concert-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/L2A/concert/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/L2A/concert/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/L2A/concert/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_MBcO44wfLGMZDO9xbeXoUCN74D8l -- vercel pull --yes --environment=preview --token=dop38xpGKjYSlE3GLRAh6UAx",
                "npx env-cmd -f apps/L2A/concert/backend/.env vercel build --token=dop38xpGKjYSlE3GLRAh6UAx",
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_MBcO44wfLGMZDO9xbeXoUCN74D8l -- vercel --archive=tgz --prebuilt --token=dop38xpGKjYSlE3GLRAh6UAx"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_MBcO44wfLGMZDO9xbeXoUCN74D8l -- vercel pull --yes --environment=production --token=dop38xpGKjYSlE3GLRAh6UAx",
                "vercel build --prod --token=dop38xpGKjYSlE3GLRAh6UAx",
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_MBcO44wfLGMZDO9xbeXoUCN74D8l -- vercel --prebuilt --prod --token=dop38xpGKjYSlE3GLRAh6UAx"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_chAE9OqboAWNAJOGvjhkqFXKwBLG -- vercel pull --yes --environment=production --token=dop38xpGKjYSlE3GLRAh6UAx",
                "vercel build --prod --token=dop38xpGKjYSlE3GLRAh6UAx",
                "npx dotenv -v VERCEL_ORG_ID=team_9hAnRZXLrMBnY0Pspe5kw7rL -v VERCEL_PROJECT_ID=prj_chAE9OqboAWNAJOGvjhkqFXKwBLG -- vercel --prebuilt --prod --token=dop38xpGKjYSlE3GLRAh6UAx"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "example-frontend": {
      "name": "example-frontend",
      "type": "app",
      "data": {
        "root": "apps/example/frontend",
        "name": "example-frontend",
        "$schema": "../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/example/frontend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/example/frontend"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/example/frontend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "example-frontend:build",
              "dev": true,
              "port": 4201
            },
            "configurations": {
              "development": {
                "buildTarget": "example-frontend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "example-frontend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "example-frontend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/example/frontend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/frontend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/example/frontend/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "example-frontend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "example-frontend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "example-frontend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/example/frontend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/example/frontend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "e2e": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress example-frontend"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production"
            ]
          },
          "e2e:open": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx nx cypress example-frontend --watch"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "cypress:clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress:clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf apps/example/frontend/cypress/results",
                "rm -rf apps/example/frontend/.nyc_output",
                "rm -rf apps/example/frontend/.cy",
                "rm -rf apps/example/frontend/coverage"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "cypress": {
            "executor": "@nx/cypress:cypress",
            "options": {
              "cypressConfig": "apps/example/frontend/cypress.config.ts",
              "testingType": "e2e",
              "reporter": "mochawesome",
              "devServerTarget": "example-frontend:serve:development",
              "browser": "chrome"
            },
            "dependsOn": [
              {
                "target": "cypress-generate-all-page-json"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "cypress-generate-all-page-json": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx ts-node apps/example/frontend/cypress/utils/get-all-pages.ts"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_BfcrI6YAJ4l5M3C1ioVTFPSkoqCW -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/example/frontend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_BfcrI6YAJ4l5M3C1ioVTFPSkoqCW -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_O7pb4k71YEKwzWAmOv3FD74ZD0gW -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_O7pb4k71YEKwzWAmOv3FD74ZD0gW -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_VPxhz5pgMVOLsQ76CvJRU75Cm3Di -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_VPxhz5pgMVOLsQ76CvJRU75Cm3Di -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "example-backend": {
      "name": "example-backend",
      "type": "app",
      "data": {
        "root": "apps/example/backend",
        "name": "example-backend",
        "$schema": "../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/example/backend",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/example/backend"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/example/backend"
              }
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "example-backend:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "example-backend:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "example-backend:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/backend/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "dependsOn": [
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "example-backend"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "example-backend"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "prod",
            "configurations": {
              "prod": {
                "groups": [
                  "example-backend"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config ./apps/example/backend/codegen.ts"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "example-backend:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/example/backend/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/example/backend/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/example/backend",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_GHljCR4z8P9z5NHZspPhAaK45EaG -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/example/backend/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_GHljCR4z8P9z5NHZspPhAaK45EaG -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2FoxI3mjkx14N5hgXG6shvCtB29v -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2FoxI3mjkx14N5hgXG6shvCtB29v -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_j8F2ZBNZMn2wQRAFU7gi3pwY4GU1 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_j8F2ZBNZMn2wQRAFU7gi3pwY4GU1 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "file-management": {
      "name": "file-management",
      "type": "lib",
      "data": {
        "root": "libs/file-management",
        "name": "file-management",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "libs/file-management/src",
        "projectType": "library",
        "tags": [],
        "targets": {
          "build": {
            "executor": "nx:run-commands",
            "options": {
              "command": "npx nx test file-management"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "lint": {
            "executor": "@nx/linter:eslint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "libs/file-management/**/*.ts"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "libs/file-management/jest.config.ts",
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          }
        },
        "implicitDependencies": []
      }
    },
    "client": {
      "name": "client",
      "type": "app",
      "data": {
        "root": "apps/example/client",
        "name": "client",
        "$schema": "../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/example/client",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/example/client"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/example/client"
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "client:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "client:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "client:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "client:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/example/client/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "get-secrets:dev": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "client"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "client"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:prod": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "production",
            "configurations": {
              "production": {
                "groups": [
                  "client"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "test:local": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/client/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/client/jest.config.ts",
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "graphql-codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/example/client/.env graphql-codegen --config ./apps/example/client/graphql-codegen.yml"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/example/client/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/example/client",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_tIVtzJs0y3661QimP3NIYZIgBv7C -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "npx env-cmd -f apps/example/client/.env vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_tIVtzJs0y3661QimP3NIYZIgBv7C -- vercel --archive=tgz --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:testing"
              },
              {
                "target": "export-env"
              },
              {
                "target": "graphql-codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_zPjwQ5Ljok5ZIVnKA1YoTAtBwnIC -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_zPjwQ5Ljok5ZIVnKA1YoTAtBwnIC -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:dev"
              },
              {
                "target": "export-env"
              },
              {
                "target": "graphql-codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_W7s8bXKcYpssc3WZsBdsZrJLzlF4 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_W7s8bXKcYpssc3WZsBdsZrJLzlF4 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:prod"
              },
              {
                "target": "export-env"
              },
              {
                "target": "graphql-codegen",
                "params": "forward"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "secret-manager": {
      "name": "secret-manager",
      "type": "app",
      "data": {
        "root": "apps/secret-manager",
        "name": "secret-manager",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/secret-manager",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/secret-manager"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/secret-manager"
              },
              "production": {}
            },
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "secret-manager:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "secret-manager:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "secret-manager:build:production",
                "dev": false
              }
            },
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/secret-manager",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/secret-manager/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "secret-manager:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/secret-manager/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/secret-manager/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_4UQNppZDJmC4XNfaofx3fTEqNJMy -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_4UQNppZDJmC4XNfaofx3fTEqNJMy -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "server": {
      "name": "server",
      "type": "app",
      "data": {
        "root": "apps/example/server",
        "name": "server",
        "$schema": "../../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/example/server",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/example/server"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/example/server"
              },
              "production": {}
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "server:build",
              "dev": true,
              "port": 8000
            },
            "configurations": {
              "development": {
                "buildTarget": "server:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "server:build:production",
                "dev": false
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "server:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/example/server/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "graphql-codegen": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "graphql-codegen --config apps/example/server/codegen.ts"
              ]
            },
            "dependsOn": [
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "get-secrets:development": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "development",
            "configurations": {
              "development": {
                "groups": [
                  "server"
                ],
                "env": "dev"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:testing": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "testing",
            "configurations": {
              "testing": {
                "groups": [
                  "server"
                ],
                "env": "test"
              }
            },
            "options": {},
            "parallelism": true
          },
          "get-secrets:production": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "production",
            "configurations": {
              "production": {
                "groups": [
                  "server"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/example/server/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "dependsOn": [
              {
                "target": "graphql-codegen"
              }
            ],
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/example/server/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/example/server",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2FoxI3mjkx14N5hgXG6shvCtB29v -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_2FoxI3mjkx14N5hgXG6shvCtB29v -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "graphql-codegen"
              },
              {
                "target": "export-env"
              },
              {
                "target": "get-secrets:development"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_908aVqj2NLarCpn9ooGMdUpdxUFs -- vercel pull --yes --environment=preview --token=$VERCEL_TOKEN",
                "vercel build --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_908aVqj2NLarCpn9ooGMdUpdxUFs -- vercel --prebuilt --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "graphql-codegen"
              },
              {
                "target": "export-env"
              },
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_908aVqj2NLarCpn9ooGMdUpdxUFs -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_908aVqj2NLarCpn9ooGMdUpdxUFs -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "graphql-codegen"
              },
              {
                "target": "export-env"
              },
              {
                "target": "get-secrets:testing"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_j8F2ZBNZMn2wQRAFU7gi3pwY4GU1 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_j8F2ZBNZMn2wQRAFU7gi3pwY4GU1 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets:production"
              },
              {
                "target": "export-env"
              },
              {
                "target": "graphql-codegen"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "documentation": {
      "name": "documentation",
      "type": "app",
      "data": {
        "root": "apps/documentation",
        "name": "documentation",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/documentation",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/apps/documentation"
            },
            "configurations": {
              "development": {
                "outputPath": "apps/documentation"
              },
              "production": {}
            },
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "documentation:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "documentation:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "documentation:build:production",
                "dev": false
              }
            },
            "parallelism": true
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "documentation:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "apps/documentation/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/documentation/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "codegen": {
            "executor": "nx:run-commands",
            "defaultConfiguration": "development",
            "configurations": {
              "local": {
                "commands": [
                  "npx env-cmd -f apps/documentation/.env.local graphql-codegen --config ./apps/documentation/graphql-codegen.yml"
                ]
              },
              "development": {
                "commands": [
                  "npx env-cmd -f apps/documentation/.env.development graphql-codegen --config ./apps/documentation/graphql-codegen.yml"
                ]
              },
              "preview": {
                "commands": [
                  "npx env-cmd -f apps/documentation/.env.preview graphql-codegen --config ./apps/documentation/graphql-codegen.yml"
                ]
              },
              "production": {
                "commands": [
                  "npx env-cmd -f apps/documentation/.env.production graphql-codegen --config ./apps/documentation/graphql-codegen.yml"
                ]
              }
            },
            "options": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/documentation",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "get-secrets": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "production",
            "configurations": {
              "production": {
                "groups": [
                  "cms-dashboard"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/documentation/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_LGvhEMiSYEfIIwN9FKaox02Q1od0 -- vercel pull --yes --environment=production --token=$VERCEL_TOKEN",
                "vercel build --prod --token=$VERCEL_TOKEN",
                "npx dotenv -v VERCEL_ORG_ID=team_0ASDilhqwPl5fll9OnzqDM30 -v VERCEL_PROJECT_ID=prj_LGvhEMiSYEfIIwN9FKaox02Q1od0 -- vercel --prebuilt --prod --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "federation": {
      "name": "federation",
      "type": "app",
      "data": {
        "root": "apps/federation",
        "name": "federation",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "apps/federation/src",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/esbuild:esbuild",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "local",
            "options": {
              "platform": "node",
              "outputPath": "dist/apps/federation",
              "format": [
                "cjs"
              ],
              "main": "apps/federation/src/index.ts",
              "tsConfig": "apps/federation/tsconfig.app.json",
              "assets": [
                "apps/federation/src/assets"
              ],
              "generatePackageJson": true,
              "esbuildOptions": {
                "sourcemap": true,
                "outExtension": {
                  ".js": ".js"
                }
              }
            },
            "configurations": {
              "local": {
                "envFiles": [
                  ".env.local"
                ]
              },
              "development": {
                "envFiles": [
                  ".env.development"
                ]
              },
              "preview": {
                "envFiles": [
                  ".env.preview"
                ]
              },
              "testing": {
                "envFiles": [
                  ".env.testing"
                ]
              },
              "production": {
                "envFiles": [
                  ".env.production"
                ]
              }
            },
            "parallelism": true,
            "cache": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/js:node",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "federation:build"
            },
            "configurations": {
              "development": {
                "buildTarget": "federation:build:development"
              },
              "production": {
                "buildTarget": "federation:build:production"
              }
            },
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat apps/federation/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "clean": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "rm -rf dist/apps/federation",
                "rm -rf .vercel"
              ]
            },
            "configurations": {},
            "parallelism": true
          },
          "dev-local": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                {
                  "command": "npx nx dev-local-federation scripts args",
                  "forwardAllArgs": true
                }
              ]
            },
            "dependsOn": [
              {
                "target": "clean"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "apps/federation/jest.config.ts",
              "codeCoverage": true,
              "passWithNoTests": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "get-secrets": {
            "executor": "@pinecone-intern-monorepo/secrets:get",
            "defaultConfiguration": "production",
            "configurations": {
              "production": {
                "groups": [
                  "federation"
                ],
                "env": "prod"
              }
            },
            "options": {},
            "parallelism": true
          },
          "add-secrets": {
            "executor": "@pinecone-intern-monorepo/secrets:add",
            "configurations": {},
            "options": {},
            "parallelism": true
          },
          "deploy-dev": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/federation/.env.development nx build --skip-nx-cache  federation --configuration=development",
                "cp apps/federation/vercel.json dist/apps/federation",
                "cp apps/federation/.env.development dist/apps/federation/.env",
                "npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_9XY6hK0JlilqnXQIMz5csGoSbui5 -- vercel pull --yes --environment=production  --token=$VERCEL_TOKEN",
                "mv .vercel dist/apps/federation",
                "cd dist/apps/federation; npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_9XY6hK0JlilqnXQIMz5csGoSbui5 -- vercel --prod  --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "preview": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/federation/.env.preview nx build --skip-nx-cache  federation --configuration=preview",
                "cp apps/federation/vercel.json dist/apps/federation",
                "cp apps/federation/.env.preview dist/apps/federation/.env",
                "npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_sRlo01gVhTr1vuHQSJ7yAs18ZsF4 -- vercel pull --yes --environment=preview  --token=$VERCEL_TOKEN",
                "mv .vercel dist/apps/federation",
                "cd dist/apps/federation; npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_sRlo01gVhTr1vuHQSJ7yAs18ZsF4 -- vercel  --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/federation/.env.testing nx build --skip-nx-cache  federation --configuration=testing",
                "cp apps/federation/vercel.json dist/apps/federation",
                "cp apps/federation/.env.testing dist/apps/federation/.env",
                "npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_sRlo01gVhTr1vuHQSJ7yAs18ZsF4 -- vercel pull --yes --environment=production  --token=$VERCEL_TOKEN",
                "mv .vercel dist/apps/federation",
                "cd dist/apps/federation; npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_sRlo01gVhTr1vuHQSJ7yAs18ZsF4 -- vercel --prod  --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "npx env-cmd -f apps/federation/.env.production nx build --skip-nx-cache  federation --configuration=production",
                "cp apps/federation/vercel.json dist/apps/federation",
                "cp apps/federation/.env.production dist/apps/federation/.env",
                "npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_3YAzLHEAqjaL1qEt7kNMHN39SrI1 -- vercel pull --yes --environment=production  --token=$VERCEL_TOKEN",
                "mv .vercel dist/apps/federation",
                "cd dist/apps/federation; npx dotenv -v VERCEL_ORG_ID=team_DqGGgGmMFvEQF0TUpV2NV3WY -v VERCEL_PROJECT_ID=prj_3YAzLHEAqjaL1qEt7kNMHN39SrI1 -- vercel --prod  --token=$VERCEL_TOKEN"
              ],
              "parallel": false
            },
            "dependsOn": [
              {
                "target": "clean"
              },
              {
                "target": "get-secrets"
              },
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "generator": {
      "name": "generator",
      "type": "lib",
      "data": {
        "root": "libs/generator",
        "name": "generator",
        "projectType": "library",
        "tags": [
          "npm:public"
        ],
        "metadata": {
          "targetGroups": {},
          "js": {
            "packageName": "@pinecone-intern-monorepo/generator",
            "packageMain": "./src/index.js",
            "isInPackageManagerWorkspaces": false
          }
        },
        "targets": {
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "@nx/js:tsc",
            "outputs": [
              "{options.outputPath}"
            ],
            "options": {
              "outputPath": "dist/libs/generator",
              "main": "libs/generator/src/index.ts",
              "tsConfig": "libs/generator/tsconfig.lib.json",
              "assets": [
                "libs/generator/*.md",
                {
                  "input": "./libs/generator/src",
                  "glob": "**/!(*.ts)",
                  "output": "./src"
                },
                {
                  "input": "./libs/generator/src",
                  "glob": "**/*.d.ts",
                  "output": "./src"
                },
                {
                  "input": "./libs/generator",
                  "glob": "generators.json",
                  "output": "."
                },
                {
                  "input": "./libs/generator",
                  "glob": "executors.json",
                  "output": "."
                }
              ]
            },
            "configurations": {},
            "parallelism": true,
            "cache": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          }
        },
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "libs/generator/src",
        "implicitDependencies": []
      }
    },
    "scripts": {
      "name": "scripts",
      "type": "lib",
      "data": {
        "root": "libs/scripts",
        "name": "scripts",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "libs/scripts/src",
        "projectType": "library",
        "tags": [],
        "targets": {
          "build": {
            "executor": "nx:run-commands",
            "options": {
              "command": "npx nx test scripts"
            },
            "configurations": {},
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "lint": {
            "executor": "@nx/linter:eslint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "libs/scripts/**/*.ts"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "libs/scripts/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "execute-cypress": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/commands/execute-cypress.ts"
            },
            "configurations": {},
            "parallelism": true
          },
          "check-cypress-code-coverage": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/actions/e2e/check-cypress-code-coverage.ts"
            },
            "configurations": {},
            "parallelism": true
          },
          "export-env": {
            "executor": "nx:run-commands",
            "options": {
              "commands": [
                "export $(cat libs/scripts/.env | xargs)"
              ],
              "parallel": false
            },
            "configurations": {},
            "parallelism": true
          },
          "dev-local-federation": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/commands/dev-local-federation-command.ts"
            },
            "configurations": {},
            "parallelism": true
          },
          "preview-action": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/actions/preview/preview-action.ts"
            },
            "dependsOn": [
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "pre-commit": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/pre-commit/pre-commit-script.ts"
            },
            "configurations": {},
            "parallelism": true
          },
          "deploy-dev-action": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/actions/deployment/deploy-dev-action.ts"
            },
            "dependsOn": [
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-testing-action": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/actions/deployment/deploy-testing-action.ts"
            },
            "dependsOn": [
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          },
          "deploy-prod-action": {
            "executor": "nx:run-commands",
            "options": {
              "command": "ts-node libs/scripts/src/actions/deployment/deploy-prod-action.ts"
            },
            "dependsOn": [
              {
                "target": "export-env"
              }
            ],
            "configurations": {},
            "parallelism": true
          }
        },
        "implicitDependencies": []
      }
    },
    "secrets": {
      "name": "secrets",
      "type": "lib",
      "data": {
        "root": "libs/secrets",
        "name": "secrets",
        "projectType": "library",
        "tags": [
          "npm:public"
        ],
        "metadata": {
          "targetGroups": {},
          "js": {
            "packageName": "@pinecone-intern-monorepo/secrets",
            "packageMain": "./src/index.js",
            "isInPackageManagerWorkspaces": false
          }
        },
        "targets": {
          "nx-release-publish": {
            "executor": "@nx/js:release-publish",
            "dependsOn": [
              "^nx-release-publish"
            ],
            "options": {},
            "configurations": {},
            "parallelism": true
          },
          "build": {
            "executor": "@nx/js:tsc",
            "outputs": [
              "{options.outputPath}"
            ],
            "options": {
              "outputPath": "dist/libs/secrets",
              "main": "libs/secrets/src/index.ts",
              "tsConfig": "libs/secrets/tsconfig.lib.json",
              "assets": [
                "libs/secrets/*.md",
                {
                  "input": "./libs/secrets/src",
                  "glob": "**/!(*.ts)",
                  "output": "./src"
                },
                {
                  "input": "./libs/secrets/src",
                  "glob": "**/*.d.ts",
                  "output": "./src"
                },
                {
                  "input": "./libs/secrets",
                  "glob": "generators.json",
                  "output": "."
                },
                {
                  "input": "./libs/secrets",
                  "glob": "executors.json",
                  "output": "."
                }
              ]
            },
            "configurations": {},
            "parallelism": true,
            "cache": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "libs/secrets/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "libs/secrets/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          }
        },
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "libs/secrets/src",
        "implicitDependencies": []
      }
    },
    "shadcn": {
      "name": "shadcn",
      "type": "lib",
      "data": {
        "root": "libs/shadcn",
        "name": "shadcn",
        "$schema": "../../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "libs/shadcn/src",
        "projectType": "library",
        "tags": [
          "type:ui",
          "scope:shared",
          "type:util"
        ],
        "targets": {
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "libs/shadcn/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          }
        },
        "implicitDependencies": []
      }
    },
    "docs": {
      "name": "docs",
      "type": "app",
      "data": {
        "root": "docs",
        "name": "docs",
        "$schema": "../node_modules/nx/schemas/project-schema.json",
        "sourceRoot": "docs",
        "projectType": "application",
        "tags": [],
        "targets": {
          "build": {
            "executor": "@nx/next:build",
            "outputs": [
              "{options.outputPath}"
            ],
            "defaultConfiguration": "production",
            "options": {
              "outputPath": "dist/docs"
            },
            "configurations": {
              "development": {
                "outputPath": "docs"
              },
              "production": {}
            },
            "parallelism": true,
            "dependsOn": [
              "^build"
            ],
            "inputs": [
              "production",
              "^production"
            ]
          },
          "serve": {
            "executor": "@nx/next:server",
            "defaultConfiguration": "development",
            "options": {
              "buildTarget": "docs:build",
              "dev": true
            },
            "configurations": {
              "development": {
                "buildTarget": "docs:build:development",
                "dev": true
              },
              "production": {
                "buildTarget": "docs:build:production",
                "dev": false
              }
            },
            "parallelism": true
          },
          "test": {
            "executor": "@nx/jest:jest",
            "outputs": [
              "{workspaceRoot}/coverage/{projectRoot}"
            ],
            "options": {
              "jestConfig": "docs/jest.config.ts",
              "passWithNoTests": true,
              "codeCoverage": true
            },
            "configurations": {
              "ci": {
                "ci": true
              }
            },
            "parallelism": true,
            "inputs": [
              "default",
              "^production",
              "{workspaceRoot}/jest.preset.js"
            ]
          },
          "export": {
            "executor": "@nx/next:export",
            "options": {
              "buildTarget": "docs:build:production"
            },
            "configurations": {},
            "parallelism": true
          },
          "lint": {
            "executor": "@nx/eslint:lint",
            "outputs": [
              "{options.outputFile}"
            ],
            "options": {
              "lintFilePatterns": [
                "docs/**/*.{ts,tsx,js,jsx}"
              ]
            },
            "configurations": {},
            "parallelism": true,
            "inputs": [
              "default",
              "{workspaceRoot}/.eslintrc.json",
              "{workspaceRoot}/.eslintignore",
              "{workspaceRoot}/tools/eslint-rules/**/*"
            ]
          }
        },
        "implicitDependencies": []
      }
    }
  },
  "externalNodes": {},
  "dependencies": {
    "real-estate-frontend": [],
    "real-estate-backend": [],
    "Tinder-frontend-2025-2B": [],
    "leave-request-frontend": [],
    "Tinder-backend-2025-2B": [],
    "leave-request-backend": [],
    "Hotel-Booking-BE": [],
    "Hotel-Booking-FE": [],
    "restaurant-frontend": [],
    "restaurant-backend": [],
    "chatbot-frontend": [],
    "chatbot-backend": [],
    "concert": [],
    "concert-backend": [],
    "example-frontend": [],
    "example-backend": [],
    "file-management": [],
    "client": [],
    "secret-manager": [],
    "server": [],
    "documentation": [],
    "federation": [],
    "generator": [],
    "scripts": [],
    "secrets": [],
    "shadcn": [],
    "docs": []
  },
  "version": "6.0",
  "errors": [],
  "computedAt": 1746684207746
}