query Query {
  sampleQuery
}
query GetUserInfo($jwt: String!) {
  GetUserInfo(JWT: $jwt) {
    email
    id
    phone
    isAdmin
    bookings {
      id
    }
  }
}
query concerts {
  concerts {
    id
    artistName
    description
    doorOpen
    musicStart
    primaryPrice
    specialGuestName
    thumbnailUrl
    featured
    title
    venue {
      address
      capacity
      city
      id
      name
    }
    seatData {
      seats {
        Backseat {
          availableTickets
          price
        }
        Standard {
          price
          availableTickets
        }
        VIP {
          availableTickets
          price
        }
      }
      date
    }
  }
}

query userTickets($userId: String!) {
  userTickets(userId: $userId) {
    id
    concert {
      id
      title
      description
      thumbnailUrl
      doorOpen
      musicStart
      primaryPrice
      featured
    }
    totalPrice
    ticket {
      Standard {
        count
        price
      }
      VIP {
        count
        price
      }
      Backseat {
        count
        price
      }
    }
    createdAt
    updatedAt
  }
}

query FeaturedEvents {
  featuredEvents {
    id
    artistName
    description
    doorOpen
    musicStart
    primaryPrice
    specialGuestName
    thumbnailUrl
    featured
    title
    venue {
      address
      capacity
      city
      id
      name
    }
    seatData {
      seats {
        Backseat {
          availableTickets
          price
        }
        Standard {
          price
          availableTickets
        }
        VIP {
          availableTickets
          price
        }
      }
      date
    }
    endDate
  }
}

query GetCancelRequests {
  getCancelRequests {
    id
    concert {
      id
      title
      description
      thumbnailUrl
      doorOpen
      musicStart
      primaryPrice
      artistName
      specialGuestName
      endDate
      featured
    }
    user {
      id
      email
    }
    ticket {
      id
      totalPrice
      ticket {
        Standard {
          count
          price
        }
        VIP {
          count
          price
        }
        Backseat {
          count
          price
        }
      }
      createdAt
      updatedAt
    }
    createdAt
    status
    bankOwnerName
    bankName
    accountNumber
  }
}

mutation Mutation {
  sampleMutation
}

mutation addUser($email: String!, $password: String!) {
  addUser(email: $email, password: $password) {
    email
  }
}
mutation loginUser($email: String!, $password: String!) {
  loginUser(email: $email, password: $password) {
    JWT
    email
    isAdmin
  }
}

query Concert($concertId: String!) {
  concert(concertId: $concertId) {
    artistName
    description
    doorOpen
    endDate
    id
    musicStart
    featured
    seatData {
      date
      id
      seats {
        Backseat {
          price
          availableTickets
        }
        Standard {
          availableTickets
          price
        }
        VIP {
          availableTickets
          price
        }
      }
    }
    specialGuestName
    thumbnailUrl
    primaryPrice
    title
    venue {
      address
      capacity
      city
      id
      name
    }
  }
}

mutation createVenue($name: String!, $address: String!, $city: String!, $capacity: Int!) {
  createVenue(name: $name, address: $address, city: $city, capacity: $capacity) {
    id
  }
}

mutation CreateConcert($input: CreateConcertInput!) {
  createConcert(input: $input) {
    id
  }
}

query AdminGetConcerts {
  concerts {
    id
    artistName
    description
    doorOpen
    musicStart
    primaryPrice
    specialGuestName
    thumbnailUrl
    title
    venue {
      address
      capacity
      city
      id
      name
    }
  }
}

mutation ChangeCurrentPassword($email: String!, $currentPassword: String!, $newPassword: String!) {
  changeCurrentPassword(email: $email, currentPassword: $currentPassword, newPassword: $newPassword) {
    id
    email
  }
}

mutation updateUserInfo($id: String!, $email: String, $phone: Int) {
  updateUserInfo(id: $id, email: $email, phone: $phone) {
    id
    email
    phone
  }
}

mutation OTP($email: String!) {
  OTP(email: $email) {
    id
  }
}

mutation OtpStep2($email: String!, $otp: Int!) {
  OtpStep2(email: $email, otp: $otp) {
    id
  }
}

mutation OtpStep3($email: String!, $otp: Int!, $password: String!) {
  OtpStep3(email: $email, otp: $otp, password: $password) {
    id
  }
}

mutation searchEvents($name: String) {
  searchEvents(name: $name) {
    id
    artistName
    description
    doorOpen
    musicStart
    primaryPrice
    specialGuestName
    thumbnailUrl
    featured
    title
    endDate
    venue {
      address
      capacity
      city
      id
      name
    }
    seatData {
      seats {
        Backseat {
          availableTickets
          price
        }
        Standard {
          price
          availableTickets
        }
        VIP {
          availableTickets
          price
        }
      }
      date
      id
    }
  }
}

mutation deleteEvent($deleteEventId: String!) {
  deleteEvent(id: $deleteEventId) {
    id
  }
}

mutation featureAnEvent($concertId: String!) {
  featureAnEvent(concertId: $concertId) {
    id
  }
}

mutation CreateTicketOrder($input: CreateTicketOrderInput!) {
  createTicketOrder(input: $input) {
    tickets {
      id
      ticket {
        Backseat {
          count
          price
        }
        Standard {
          count
          price
        }
        VIP {
          count
          price
        }
      }
    }
    totalPrice
  }
}

mutation UpdateEventInfo($concertId: String!, $description: String, $title: String, $artistName: String) {
  updateEventInfo(concertId: $concertId, description: $description, title: $title, artistName: $artistName) {
    id
  }
}

mutation createCancelRequest($userId: String!, $ticketId: String!, $bankName: String!, $accountNumber: String!, $bankOwnerName: String!) {
  createCancelRequest(userId: $userId, ticketId: $ticketId, bankName: $bankName, accountNumber: $accountNumber, bankOwnerName: $bankOwnerName) {
    id
  }
}

mutation changeStatus($requestId: String!) {
  changeStatus(requestId: $requestId) {
    id
  }
}
